{"version":3,"sources":["inlineTextEdit.js","reactions.js","index.js"],"names":["InlineTextEdit","props","hiddenText","useRef","useState","children","text","setText","width","height","lineHeight","style","setStyle","useEffect","tempStyle","window","getComputedStyle","current","id","ref","type","value","onChange","e","target","placeholder","Popup","React","forwardRef","node","popup","availReactions","reactionChange","className","map","offset","idx","key","zIndex","backgroundPosition","onClick","Reactions","clickListener","useCallback","contains","setPopup","document","removeEventListener","bgOffsets","reactions","setReactions","currSel","setCurrSel","setAvailReactions","handleClick","filter","element","addEventListener","i","toString","display","marginRight","array","length","Main","img1","setImg1","img2","setImg2","name","accept","URL","createObjectURL","files","htmlFor","backgroundImage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.306ff970.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n// import ReactDOM from 'react-dom';\nimport './inlineTextEdit.css'\n\nconst InlineTextEdit = (props) => {\n  const hiddenText = useRef(null)\n  const [text, setText] = useState(props.children)\n  const [style, setStyle] = useState({\n    width: \"10px\",\n    height: \"10px\",\n    lineHeight: \"0\"\n    })\n  \n  useEffect(() => {\n    const tempStyle = window.getComputedStyle( hiddenText.current )\n    setStyle({\n      width: tempStyle.width,\n      height: tempStyle.height,\n    })\n  }, [text])\n\n  return (\n    <div>\n        <div id=\"noHeight\">\n            <span id=\"hide\" ref={hiddenText}>{text+\" \"}</span>\n        </div>\n        <textarea\n            id=\"txt\"\n            type=\"text\"\n            value={text}\n            style={style}\n            onChange={(e)=>setText(e.target.value)}\n            placeholder=\"Hello\">\n        </textarea>\n    </div>\n  );\n}\n\nexport default InlineTextEdit","import React, { useState, useRef, useCallback } from \"react\"\nimport InlineTextEdit from \"./inlineTextEdit\"\n\nconst Popup = React.forwardRef( ({ popup, availReactions, reactionChange, ...props}, node) => {\n    \n    return(\n        <div ref={node} className={`test ${popup ? \"show\" : \"hide\"}`}>\n                    { availReactions.map((offset, idx) => \n                        <i  key={idx}\n                            className=\"reaction-icon\" \n                            style={{ zIndex: {idx}, backgroundPosition: offset }}\n                            onClick={ ()=>reactionChange(idx) }\n                        />)\n                    }\n        </div>\n    )\n} )\n\nconst Reactions = ( props ) => {\n    \n    const node = useRef()\n    \n    const clickListener = useCallback((e) => {\n        if (node.current.contains(e.target)) {\n            return;\n        }\n        setPopup(false)\n        document.removeEventListener(\"click\", clickListener);\n    }, [])\n    \n    const bgOffsets = [\n        \"-49px -1159px\",\n        \"-68px -1159px\",\n        \"-68px -1197px\",\n        \"-68px -1140px\",\n        \"-70px -1119px\",\n        \"-49px -1178px\",\n    ]\n    \n    const [reactions, setReactions] = useState([\n        bgOffsets[0],\n        bgOffsets[1],\n        bgOffsets[2]\n    ])\n    \n    const [popup, setPopup] = useState(false)\n    \n    const [currSel, setCurrSel] = useState(null)\n    \n    const [availReactions, setAvailReactions] = useState([])\n    \n    const handleClick = (e) => {\n        setPopup(true)\n        // console.log(e.target.key)\n        setCurrSel(e.target.id)\n        setAvailReactions( bgOffsets.filter( element => {\n            for( const key in reactions){\n                if( element === reactions[key] ) return false\n            }\n            return true\n        })\n        )\n        document.addEventListener(\"click\", clickListener);\n    }\n    \n    const reactionChange = (idx) => {\n        // console.log(reactions.map( (value, i)=> i === currSel ? availReactions[idx] : value ))\n        setReactions( reactions.map( (value, i)=> {\n            // console.log(i, currSel)\n            return i.toString() === currSel ? availReactions[idx] : value \n        }) )\n        setPopup(false)\n        document.removeEventListener(\"click\", clickListener);\n        // console.log(\"adasas\")\n    }\n    \n    return (\n            <div className=\"reactions-icons-div\">\n                <Popup ref={node} popup={popup} availReactions={availReactions} reactionChange={reactionChange}></Popup>\n                <div style={{display: \"flex\", marginRight: \"0.6rem\"}}>\n                    { reactions.map((value, idx, array) => \n                        <i  className=\"reaction-icon\" \n                            key={idx}\n                            id={idx}\n                            style={{ zIndex: array.length-idx, backgroundPosition: reactions[idx] }}\n                            onClick={handleClick}\n                        /> )\n                    }\n                </div>\n                <span className=\"bottom-text\">\n                    <InlineTextEdit>323</InlineTextEdit>\n                </span>\n            </div>\n    )\n}\n\nexport default Reactions","import React, { useState, } from 'react';\nimport ReactDOM from 'react-dom';\nimport InlineTextEdit from './inlineTextEdit'\nimport Reactions from \"./reactions\"\nimport \"./reset.css\"\nimport \"./normalize.css\"\nimport \"./style.css\"\n\nfunction Main() {\n  \n  const [img1, setImg1] = useState()\n  const [img2, setImg2] = useState()\n\n  return (\n    <div className=\"card\">\n      <div className=\"upper\">\n        <div className=\"cardHead\">\n          <input type=\"file\" name=\"file1\" id=\"file1\" className=\"inputfile\" accept=\"image/png, image/jpeg\" \n          onChange={e=>setImg2(URL.createObjectURL(e.target.files[0]))}\n          />\n          <label htmlFor=\"file1\" className=\"chooseFile\">\n          <div className=\"headImage changeImg\" style={{backgroundImage: img2 ? `url(${img2})` : `url(https://unsplash.it/500/300)` }} />\n          </label>\n          <div className=\"headText\">\n            <h4 className=\"card-headline\">\n              <InlineTextEdit>Care Å mare</InlineTextEdit>\n            </h4>\n            <span className=\"head-time\">\n              <InlineTextEdit>Yesterday at 11:56 AM</InlineTextEdit>\n            </span>\n          </div>\n        </div>\n        <div className=\"postText\">\n          <InlineTextEdit>\n            This is my face for the past three days. I've already updated Spark and IG app, but still can't use test links at all\n          </InlineTextEdit>\n        </div>\n      </div>\n      <input type=\"file\" name=\"file2\" id=\"file2\" className=\"inputfile\" accept=\"image/png, image/jpeg\" \n      onChange={e=>setImg1(URL.createObjectURL(e.target.files[0]))}\n      />\n      <label htmlFor=\"file2\" className=\"chooseFile\">\n       { /*<div className=\"middle\">\n          <h1 className=\"textOverlay\">Change Image...</h1>\n        </div>*/ }\n        <div className=\"changeImg bodyImg\" style={{backgroundImage: img1 ? `url(${img1})` : `url(https://unsplash.it/500/300)` }} />\n      </label>\n      <div className=\"cardText\">\n        <div className=\"reactions-div\">\n          <Reactions></Reactions>\n          <div className=\"bottom-text reactions-comments\">\n            <InlineTextEdit>4</InlineTextEdit>comments\n          </div>\n        </div>\n        <div className=\"like-comment-share\">\n          <div className=\"button-action\">\n            <i className=\"action-icons icon-like\"></i>Like\n          </div>\n          <div className=\"button-action\">\n            <i className=\"action-icons icon-comment\"></i>Comment\n          </div>\n          <div className=\"button-action\">\n            <i className=\"action-icons icon-share\"></i>Share\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));"],"sourceRoot":""}